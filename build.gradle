plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.7'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.diffplug.spotless' version '6.23.3' // spotless
    id 'com.google.cloud.tools.jib' version '2.8.0' // jib
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jib {
    from {
        image = "openjdk:17-alpine"
    }
    to {
        image = "artstoryage/api"
        tags = ["latest"]
        auth {
            username = 'artstoryage'
            password = System.getenv('DOCKERHUB_PASSWORD') ?: ''
        }
    }
    container {
        jvmFlags = ["-Xms128m", "-Xmx128m", "-Dspring.profiles.active=dev", "-Dfile.encoding=UTF-8"]
        ports = ["8080"]
        allowInsecureRegistries = true
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // h2
    runtimeOnly 'com.h2database:h2'

    // bcrypt
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.3m'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar{
    enabled = false
}

tasks.named('compileJava') {
    dependsOn 'spotlessApply'
    dependsOn 'addGitHooks'
}

tasks.register('addGitHooks', Copy) {
    from './script/pre-commit'
    into './.git/hooks'
    filePermissions {
        unix('r-xr-xr-x')
    }
}